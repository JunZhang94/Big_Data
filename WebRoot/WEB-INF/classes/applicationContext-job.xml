<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	default-lazy-init="false" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee-2.5.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd">
		
	<bean class="com.jp.tic.system.job.SystemMountJob" id="systemMountJob"></bean>
	<bean class="com.jp.tic.system.job.GetDatasToOracleJob" id="GetDatasToOracleJob"></bean>
	
	<!-- 测试定时调用方法 -->
	<bean id="testMyMethodJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="systemMountJob"/>
		<property name="targetMethod" value="myJobTest"/>
	</bean>
	<!-- 测试定时调用方法 -->
	<bean id="getDataToOracleJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="GetDatasToOracleJob"/>
		<property name="targetMethod" value="handleDatasToOracle"/>
	</bean>
	
	<!-- 制造过车统计状态表假数据 -->
	<bean id="loadMountDataJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="systemMountJob"/>
		<property name="targetMethod" value="loadDisMountDatas"/>
	</bean>
	
	<!-- 统计卡口在线状态和数据接收状态数据,按时统计 -->
	<bean id="mountChatTrendJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="systemMountJob"/>
		<property name="targetMethod" value="statisticsMountTrendDatas"/>
	</bean>
	
	<!-- 统计卡口在线状态和数据接收状态数据，按天统计 -->
	<bean id="mountChatDayTrendJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="systemMountJob"/>
		<property name="targetMethod" value="statisticsMountDayTrendDatas"/>
	</bean>
	
	<!-- 假牌车统计分析  -->
	<bean id="fakeCarNumTrendJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="systemMountJob"/>
		<property name="targetMethod" value="fakeCarNumStatistics"/>
		<property name="concurrent" value="false" />
	</bean>
	
	<!-- 通过Hbase时时统计卡口在线状态，统计上一个小时的数据 -->
	<bean id="statusStatisticsJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="systemMountJob"/>
		<property name="targetMethod" value="mountStatusStatistics"/>
	</bean>
	
	<!-- 套牌车分析，每隔N分钟执行一次分析任务 -->
	<bean id="deckAnalysisJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="systemMountJob"/>
		<property name="targetMethod" value="analysisDeckDatas"/>
		<property name="concurrent" value="false"/>
	</bean>
	
	<!-- 套牌车辆库比对分析，每隔N分钟执行一次分析任务 -->
	<bean id="deckCompareAnalysisJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="systemMountJob"/>
		<property name="targetMethod" value="analysisCompareDeckDatas"/>
		<property name="concurrent" value="false"/>
	</bean>
	
	<!-- 交通流量统计，每隔一小时执行一次分析任务 -->
	<bean id="solrFacetDataJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="systemMountJob"/>
		<property name="targetMethod" value="querySolrFacetData"/>
		<property name="concurrent" value="false"/>
	</bean>
	
	<!-- 过车数据转移，每分钟执行一次分析任务 -->
	<bean id="transferDataJob"
		class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
		<property name="targetObject" ref="systemMountJob"/>
		<property name="targetMethod" value="startTransferData"/>
		<property name="concurrent" value="false"/>
	</bean>
	
	<!-- 每天凌晨00:05执行号牌颜色统计,统计前一天数据 

		CronTrigger配置格式: 格式: [秒] [分] [小时] [日] [月] [周] [年] 序号 说明 是否必填 允许填写的值 
			允许的通配符 1 秒 是 0-59 , - * / 2 分 是 0-59 , - * / 3 小时 是 0-23 , - * / 4 日 是 1-31 
			, - * ? / L W 5 月 是 1-12 or JAN-DEC , - * / 6 周 是 1-7 or SUN-SAT , - * ? 
			/ L # 7 年 否 empty 或 1970-2099 , - * / 通配符说明: * 表示所有值. 例如:在分的字段上设置 "*",表示每一分钟都会触发。 
			? 表示不指定值。使用的场景为不需要关心当前设置这个字段的值。例如:要在每月的10号触发一个操作，但不关心是周几，所以需要周位置的那个字段设置为"?" 
			具体设置为 0 0 0 10 * ? - 表示区间。例如 在小时上设置 "10-12",表示 10,11,12点都会触发。 , 表示指定多个值，例如在周字段上设置 
			"MON,WED,FRI" 表示周一，周三和周五触发 / 用于递增触发。如在秒上面设置"5/15" 表示从5秒开始，每增15秒触发(5,20,35,50)。 
			在月字段上设置'1/3'所示每月1号开始，每隔三天触发一次。 L 表示最后的意思。在日字段设置上，表示当月的最后一天(依据当前月份，如果是二月还会依据是否是润年[leap]), 
			在周字段上表示星期六，相当于"7"或"SAT"。如果在"L"前加上数字，则表示该数据的最后一个。例如在周字段上设置"6L"这样的格式,则表示“本月最后一个星期五" 
			W 表示离指定日期的最近那个工作日(周一至周五). 例如在日字段上设置"15W"，表示离每月15号最近的那个工作日触发。如果15号正好是周六，则找最近的周五(14号)触发, 
			如果15号是周未，则找最近的下周一(16号)触发.如果15号正好在工作日(周一至周五)，则就在该天触发。如果指定格式为 "1W",它则表示每月1号往后最近的工作日触发。如果1号正是周六，则将在3号下周一触发。(注，"W"前只能设置具体的数字,不允许区间"-"). 
			小提示 'L'和 'W'可以一组合使用。如果在日字段上设置"LW",则表示在本月的最后一个工作日触发(一般指发工资 ) # 序号(表示每月的第几个周几)，例如在周字段上设置"6#3"表示在每月的第三个周六.注意如果指定"#5",正好第五周没有周六，则不会触发该配置(用在母亲节和父亲节再合适不过了) 
			小提示 周字段的设置，若使用英文字母是不区分大小写的 MON 与mon相同. 
	-->
	<!-- 每十秒 执行一次：0/10 * * * * ? -->  
    <!-- 每五分钟：0 0/5 * * * ? -->  
    <!-- 每分钟执行一次：0 0/1 * * * ? -->  
    <!-- 每两分钟执行一次 ：0 0/2 * * * ? -->  
    <!-- 0 0/15 * * * ?每隔15分钟 -->  
    <!-- 每隔30分钟执行一次:0 0/30 * * * ? -->  
    <!-- 每隔小时执行一次:0 0 */1 * * ? -->  
    
	<!-- 每隔10秒执行一次测试 -->
	<bean id="testMyMethodTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="testMyMethodJob" />
		<property name="cronExpression" value="0/10 * * * * ?"/>
	</bean> 
	
	<!-- 每隔5分钟执行一次造数据 -->
	<bean id="loadMountDataTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="loadMountDataJob" />
		<property name="cronExpression" value="0 0/5 * * * ?"/>
	</bean> 
	<!-- 每隔5分钟执行一次获取数据 -->
	<bean id="getDataTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="getDataToOracleJob" />
		<property name="cronExpression" value="0 0/5 * * * ?"/>
	</bean> 
	
	<!-- 每隔10分钟执行卡口在线状态和数据接收状态数据统计,统计前一个小时的数据 -->
	<bean id="mountChatTrendTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="mountChatTrendJob" />
		<property name="cronExpression" value="0 0/10 * * * ?"/>
	</bean> 
	
	<!--每天凌晨00:20 执行在线状态和数据接收状态数据统计，统计前一天的数据 -->
	<bean id="mountChatDayTrendTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="mountChatDayTrendJob" />
		<property name="cronExpression" value="0 20 0 * * ?"/>
	</bean> 
	
	<!-- 每隔N秒/分执行一次假牌车统计分析 -->
	<bean id="fakeCarNumTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="fakeCarNumTrendJob" />
		<property name="cronExpression" value="0 0/20 * * * ?"/>
	</bean> 
	
	<!-- 每隔一小时执行一次统计卡口在线状态，统计上一个小时的数据 -->
	<bean id="statusStatisticsTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="statusStatisticsJob" />
		<property name="cronExpression" value="0 0 */1 * * ?"/>
	</bean> 
	
	<!-- 每隔10分钟执行套牌车分析任务，此时间要与系统配置文件中的配置时间要一致，不然统计概率会变低 -->
	<bean id="deckAnalysisTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="deckAnalysisJob" />
		<property name="cronExpression" value="0 0/1 * * * ?"/>
	</bean> 
	<!-- 每隔20分钟执行套牌车分析任务，此时间要与系统配置文件中的配置时间要一致，不然统计概率会变低 -->
	<bean id="deckCompareAnalysisTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="deckCompareAnalysisJob" />
		<property name="cronExpression" value="0 0/20 * * * ?"/>
	</bean> 
	
	<!-- 每隔1小时执行交通流量统计任务，统计上一个小时的数据 -->
	<bean id="solrFacetDataTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="solrFacetDataJob" />
		<property name="cronExpression" value="0 0 */1 * * ?"/>
	</bean> 
	
	<!-- 每隔一分钟执行一次过车数据转移 -->
	<bean id="transferDataTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="transferDataJob" />
		<property name="cronExpression" value="0 0/1 * * * ?"/>
	</bean> 
	
	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean" >
		<property name="triggers">
			<list>
			<!--	<ref local="getDataTrigger" />
				 <ref local="loadMountDataTrigger" /> -->
				<!--<ref local="mountChatTrendTrigger" />
				<ref local="mountChatDayTrendTrigger" />
				<ref local="fakeCarNumTrigger" /> 
				<ref local="statusStatisticsTrigger" /> -->
				<!-- 套牌车分析定时任务 -->
				<!-- <ref local="deckAnalysisTrigger" />  -->
			<!-- 	<ref local="deckCompareAnalysisTrigger" />  -->
				<!-- 交通流量统计定时任务 -->
				<!-- <ref local="solrFacetDataTrigger" /> -->
				<!-- <ref local="transferDataTrigger" /> -->
			</list>
		</property>
	</bean> 
</beans>

